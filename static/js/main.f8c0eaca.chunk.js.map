{"version":3,"sources":["assets/vertical1.png","assets/horizontal.png","assets/vertical2.png","components/header/header.js","App.js","components/post/post.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","options","value","label","BASE_URL","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","selectedOption","console","log","setState","history","push","concat","state","react_default","a","createElement","className","react_select_esm","isClearable","onChange","React","Component","App","withRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,ykBCKlCC,EAAU,CACd,CAAEC,MAAO,IAAKC,MAAO,QACrB,CAAED,MAAO,YAAaC,MAAO,cAC7B,CAAED,MAAO,YAAaC,MAAO,cAC7B,CAAED,MAAO,YAAaC,MAAO,cAC7B,CAAED,MAAO,mBAAoBC,MAAO,MACpC,CAAED,MAAO,YAAaC,MAAO,cAC7B,CAAED,MAAO,YAAaC,MAAO,cAC7B,CAAED,MAAO,YAAaC,MAAO,cAC7B,CAAED,MAAO,YAAaC,MAAO,cAC7B,CAAED,MAAO,OAAQC,MAAO,yBACxB,CAAED,MAAO,YAAaC,MAAO,cAC7B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,eAAgBC,MAAO,qBAG5BC,EAAQ,kDAERC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMRQ,aAAe,SAAAC,GACbC,QAAQC,IAAI,aAAcb,GAC1BG,EAAKW,SAAS,CAAEH,kBAAkB,WAC5BA,EAEFR,EAAKD,MAAMa,QAAQC,KAAnB,GAAAC,OAA2BN,EAAeb,QAE1CK,EAAKD,MAAMa,QAAQC,KAAnB,OAZJb,EAAKe,MAAQ,CACXP,eAAgB,MAHDR,wEAoBjB,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,gCACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,WACVE,aAAa,EACb1B,MAAOQ,KAAKY,MAAMP,eAClBc,SAAUnB,KAAKI,aACfb,QAASA,aA/BA6B,IAAMC,WCNZC,GD6CAC,YAAW5B,qBE3DPyB,IAAMC,qRDGrB,OAIAR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,oEAPYM,cEQEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjB,EAAAC,EAAAC,cAACgB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f8c0eaca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vertical1.6a104216.png\";","module.exports = __webpack_public_path__ + \"static/media/horizontal.c52610f4.png\";","module.exports = __webpack_public_path__ + \"static/media/vertical2.ca3a8e47.png\";","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport \"./header.css\";\nimport Select from \"react-select\";\n\nconst options = [\n  { value: \"/\", label: \"Home\" },\n  { value: \"semester1\", label: \"Semester 1\" },\n  { value: \"semester2\", label: \"Semester 2\" },\n  { value: \"semester3\", label: \"Semester 3\" },\n  { value: \"rural-internship\", label: \"RI\" },\n  { value: \"semester4\", label: \"Semester 4\" },\n  { value: \"semester5\", label: \"Semester 5\" },\n  { value: \"semester6\", label: \"Semester 6\" },\n  { value: \"semester7\", label: \"Semester 7\" },\n  { value: \"trip\", label: \"Imagica/Matheran Trip\" },  \n  { value: \"semester8\", label: \"Semester 8\" },\n  { value: \"random\", label: \"RANDOM\" },\n  { value: \"thankyounote\", label: \"Personal Section\" },\n];\n\nconst BASE_URL = `https://devansaga.github.io/Stranger-Beings-DA/`;\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: null\n    };\n  }\n\n  handleChange = selectedOption => {\n    console.log(\"BASE_URL :\", BASE_URL);\n    this.setState({ selectedOption }, () => {\n      if (selectedOption) {\n        // window.location.href = `${BASE_URL}/${selectedOption.value}`;\n        this.props.history.push(`${selectedOption.value}`);\n      } else {\n        this.props.history.push(``);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"header-container\">\n        <div className=\"header-title\">Stranger Beings (DA Edition)</div>\n        <div className=\"header-navigation-dropdown\">\n          <span>Go To: </span>\n          <Select\n            className=\"dropdown\"\n            isClearable={true}\n            value={this.state.selectedOption}\n            onChange={this.handleChange}\n            options={options}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import React, { Component } from \"react\";\nimport AppRouter from \"./routers/AppRouter\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      // <div className=\"App\">\n      //   <AppRouter />\n      // </div>\n    <div className=\"App\">\n      <h1>We are launching on this Monday (6th May 2019)</h1>\n    </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport \"./post.css\";\n\nclass Post extends React.Component {\n  getLayoutStyle = layout => {\n    switch (layout) {\n      case \"horizontal\":\n        return \"horizontal-image\";\n\n      case \"vertical\":\n        return \"vertical-image\";\n\n      default:\n        return \"image-container\";\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className={\"post-container \" + this.getLayoutStyle(this.props.layout)}\n      >\n        {this.props.src && <img src={this.props.src} alt=\"funny_image\" />}\n        <div className=\"description\">{this.props.description}</div>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}